# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ GitHub
param(
    [Parameter(Mandatory=$true)]
    [string]$GitHubToken,
    [string]$RepoName = "agro-business-plan",
    [string]$Description = "–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω –∞–≥—Ä–æ–∫–æ–º–ø–ª–µ–∫—Å–∞ –≤ –°—Ç–∞—Ä–æ–π –†—É—Å—Å–µ - ROI 457%"
)

Write-Host "üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ GitHub..." -ForegroundColor Green

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
$env:GITHUB_PERSONAL_ACCESS_TOKEN = $GitHubToken

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if (-not (Test-Path "index.html")) {
    Write-Host "‚ùå –§–∞–π–ª index.html –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞." -ForegroundColor Red
    exit 1
}

Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $RepoName" -ForegroundColor Yellow

# –°–æ–∑–¥–∞–µ–º .gitignore –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if (-not (Test-Path ".gitignore")) {
    Write-Host "üìù –°–æ–∑–¥–∞–Ω–∏–µ .gitignore..." -ForegroundColor Yellow
    @"
# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# Temporary files
*.tmp
*.temp

# Backup files
*.bak
*.backup

# Archive files
*.zip
*.tar.gz
*.rar

# Local development files
local/
dev/
test/
"@ | Out-File -FilePath ".gitignore" -Encoding UTF8
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
Write-Host "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..." -ForegroundColor Yellow
git init
git add .
git commit -m "Initial commit: Business plan website"

# –°–æ–∑–¥–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub —á–µ—Ä–µ–∑ API
Write-Host "üåê –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ GitHub..." -ForegroundColor Yellow

$headers = @{
    "Authorization" = "token $GitHubToken"
    "Accept" = "application/vnd.github.v3+json"
}

$body = @{
    name = $RepoName
    description = $Description
    private = $false
    auto_init = $false
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "https://api.github.com/user/repos" -Method POST -Headers $headers -Body $body -ContentType "application/json"
    Write-Host "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω: $($response.html_url)" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# –î–æ–±–∞–≤–ª—è–µ–º remote origin
Write-Host "üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ remote origin..." -ForegroundColor Yellow
git remote add origin "https://github.com/st2025md/$RepoName.git"
git branch -M main

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ GitHub
Write-Host "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –Ω–∞ GitHub..." -ForegroundColor Yellow
git push -u origin main

Write-Host "üéâ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!" -ForegroundColor Green
Write-Host "üåê URL: https://st2025md.github.io/$RepoName/" -ForegroundColor Cyan
Write-Host "üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å GitHub Pages –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è!" -ForegroundColor Yellow
